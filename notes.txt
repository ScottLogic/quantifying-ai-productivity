Started by creating "specification.txt" file with structured notes about the features to be added.
(121 lines of text in specification.txt)

Selected C# as the development language

Got good help from gihub CoPilot on this code...
        if (isComplete.HasValue)
        {
            todoList = todoList.Where(x => x.CompletedFlag == isComplete.Value);
        }

Otherwise I'm still having to figure things out for myself - especially how everything is "wired together".


Got this help from CoPilot:
    public ActionResult<ToDoTaskModel> GetTaskByUuid(Guid uuid)
    {
        var task = _todoRepository.GetTaskByUuid(uuid);
        if (task == null)
        {
            return NotFound();
        }
        return task;
    }

(the "NotFound()" part is wrong for our specification, but otherwise looks not bad)

This bit was helpful as well...
        if (!Guid.TryParse(uuid, out Guid uuidGuid))
        {
            return ToDoTaskModel.GetUnknownTask();
        }

[the return isn't what I want but the Guid.TryParse() syntax was what I needed]

