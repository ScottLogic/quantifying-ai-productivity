//Chat Gpt request:
//write a cypress api test to check for a response of 400 when an invalid uuid is sent

//Chat Gpt response was:
// describe('API Test - Invalid UUID', () => {
//     const BASE_URL = 'https://example-api.com'; // Replace with your API base URL
//     const ENDPOINT = '/some/endpoint'; // Replace with the endpoint you want to test
  
//     it('should return 400 for an invalid UUID', () => {
//       // Generate an invalid UUID (you can use any non-valid UUID for this test)
//       const invalidUUID = 'invalid_uuid';
  
//       // Send the API request and assert on the response status code
//       cy.request({
//         method: 'GET',
//         url: BASE_URL + ENDPOINT,
//         qs: {
//           uuid: invalidUUID,
//         },
//         failOnStatusCode: false, // Prevent Cypress from failing on non-2xx status codes
//       }).then((response) => {
//         // Assert that the response status code is 400
//         expect(response.status).to.equal(400);
//       });
//     });
//   });

//Looking at the ChatGpt response, for what we are doing here, i think this code can be simplified
//to produce the same result. I think the only thing we need to change is the url and the invalidUUID
//INTERESTING POINT - the above comment was generated by Github Copilot.

describe('Test Experiment GET Task 6', () => {
  
    it('should return 400 for an invalid UUID', () => {
      cy.request({
        method: 'GET',
        url: "http:localhost:8080/todo/zebedee",

        failOnStatusCode: false, // Prevent Cypress from failing on non-2xx status codes
      }).then((response) => {
        expect(response.status).to.equal(400);
      });
    });
  });
  
  
